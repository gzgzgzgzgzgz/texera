/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dataflow.jooq.generated;


import edu.uci.ics.texera.dataflow.jooq.generated.tables.File;
import edu.uci.ics.texera.dataflow.jooq.generated.tables.KeywordDictionary;
import edu.uci.ics.texera.dataflow.jooq.generated.tables.User;
import edu.uci.ics.texera.dataflow.jooq.generated.tables.Workflow;
import edu.uci.ics.texera.dataflow.jooq.generated.tables.WorkflowOfUser;
import edu.uci.ics.texera.dataflow.jooq.generated.tables.records.FileRecord;
import edu.uci.ics.texera.dataflow.jooq.generated.tables.records.KeywordDictionaryRecord;
import edu.uci.ics.texera.dataflow.jooq.generated.tables.records.UserRecord;
import edu.uci.ics.texera.dataflow.jooq.generated.tables.records.WorkflowOfUserRecord;
import edu.uci.ics.texera.dataflow.jooq.generated.tables.records.WorkflowRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * texera_db.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FileRecord> KEY_FILE_PRIMARY = Internal.createUniqueKey(File.FILE, DSL.name("KEY_file_PRIMARY"), new TableField[] { File.FILE.FID }, true);
    public static final UniqueKey<FileRecord> KEY_FILE_UID = Internal.createUniqueKey(File.FILE, DSL.name("KEY_file_uid"), new TableField[] { File.FILE.UID, File.FILE.NAME }, true);
    public static final UniqueKey<KeywordDictionaryRecord> KEY_KEYWORD_DICTIONARY_PRIMARY = Internal.createUniqueKey(KeywordDictionary.KEYWORD_DICTIONARY, DSL.name("KEY_keyword_dictionary_PRIMARY"), new TableField[] { KeywordDictionary.KEYWORD_DICTIONARY.KID }, true);
    public static final UniqueKey<KeywordDictionaryRecord> KEY_KEYWORD_DICTIONARY_UID = Internal.createUniqueKey(KeywordDictionary.KEYWORD_DICTIONARY, DSL.name("KEY_keyword_dictionary_uid"), new TableField[] { KeywordDictionary.KEYWORD_DICTIONARY.UID, KeywordDictionary.KEYWORD_DICTIONARY.NAME }, true);
    public static final UniqueKey<UserRecord> KEY_USER_NAME = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_name"), new TableField[] { User.USER.NAME }, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[] { User.USER.UID }, true);
    public static final UniqueKey<WorkflowRecord> KEY_WORKFLOW_PRIMARY = Internal.createUniqueKey(Workflow.WORKFLOW, DSL.name("KEY_workflow_PRIMARY"), new TableField[] { Workflow.WORKFLOW.WID }, true);
    public static final UniqueKey<WorkflowOfUserRecord> KEY_WORKFLOW_OF_USER_PRIMARY = Internal.createUniqueKey(WorkflowOfUser.WORKFLOW_OF_USER, DSL.name("KEY_workflow_of_user_PRIMARY"), new TableField[] { WorkflowOfUser.WORKFLOW_OF_USER.UID, WorkflowOfUser.WORKFLOW_OF_USER.WID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<FileRecord, UserRecord> FILE_IBFK_1 = Internal.createForeignKey(File.FILE, DSL.name("file_ibfk_1"), new TableField[] { File.FILE.UID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.UID }, true);
    public static final ForeignKey<KeywordDictionaryRecord, UserRecord> KEYWORD_DICTIONARY_IBFK_1 = Internal.createForeignKey(KeywordDictionary.KEYWORD_DICTIONARY, DSL.name("keyword_dictionary_ibfk_1"), new TableField[] { KeywordDictionary.KEYWORD_DICTIONARY.UID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.UID }, true);
    public static final ForeignKey<WorkflowOfUserRecord, UserRecord> WORKFLOW_OF_USER_IBFK_1 = Internal.createForeignKey(WorkflowOfUser.WORKFLOW_OF_USER, DSL.name("workflow_of_user_ibfk_1"), new TableField[] { WorkflowOfUser.WORKFLOW_OF_USER.UID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.UID }, true);
    public static final ForeignKey<WorkflowOfUserRecord, WorkflowRecord> WORKFLOW_OF_USER_IBFK_2 = Internal.createForeignKey(WorkflowOfUser.WORKFLOW_OF_USER, DSL.name("workflow_of_user_ibfk_2"), new TableField[] { WorkflowOfUser.WORKFLOW_OF_USER.WID }, Keys.KEY_WORKFLOW_PRIMARY, new TableField[] { Workflow.WORKFLOW.WID }, true);
}
